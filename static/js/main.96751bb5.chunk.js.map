{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["uniquifyingFilter","value","index","self","indexOf","playlists","songs","map","song","playlist","filter","sort","artists","artist","Navigation","props","className","onClick","handleClick","RenderList","data","items","length","entries","name","key","sublistType","listType","handleBack","SongList","title","renderTitle","Lyrics","find","x","lines","lyrics","line","App","useState","view","setView","viewItem","setViewItem","type","item","nav","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96751bb5.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\nimport songs from './data/songs.json'\n\nconst uniquifyingFilter = (value, index, self) => {\n\treturn self.indexOf(value) === index\n}\nconst playlists = songs\n\t.map((song) => song.playlist)\n\t.filter(uniquifyingFilter)\n\t.sort()\nconst artists = songs\n\t.map((song) => song.artist)\n\t.filter(uniquifyingFilter)\n\t.sort()\n\nfunction App() {\n\tconst [view, setView] = useState('nav')\n\tconst [viewItem, setViewItem] = useState('')\n\n\tconst handleClick = (type, item) => {\n\t\tsetView(type)\n\t\tsetViewItem(item)\n\t}\n\n\t//TODO: glyph and capitalization for subtitle via stylesheet see https://stackoverflow.com/questions/48387180/is-it-possible-to-capitalize-first-letter-of-text-string-in-react-native-how-to/58867901#58867901\n\treturn (\n\t\t<div className=\"lyrassist\">\n\t\t\t<h1 className=\"title\" onClick={() => handleClick('nav', '')}>\n\t\t\t\tLyrassist\n\t\t\t</h1>\n\t\t\t{\n\t\t\t\t{\n\t\t\t\t\tnav: <Navigation handleClick={handleClick} />,\n\t\t\t\t\tplaylists: (\n\t\t\t\t\t\t<RenderList\n\t\t\t\t\t\t\tlistType=\"playlists\"\n\t\t\t\t\t\t\tsublistType=\"playlist\"\n\t\t\t\t\t\t\titems={playlists}\n\t\t\t\t\t\t\thandleBack={() => handleClick('nav', '')}\n\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tartists: (\n\t\t\t\t\t\t<RenderList\n\t\t\t\t\t\t\tlistType=\"artists\"\n\t\t\t\t\t\t\tsublistType=\"artist\"\n\t\t\t\t\t\t\titems={artists}\n\t\t\t\t\t\t\thandleBack={() => handleClick('nav', '')}\n\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tsongs: (\n\t\t\t\t\t\t<RenderList\n\t\t\t\t\t\t\tlistType=\"songs\"\n\t\t\t\t\t\t\tsublistType=\"lyrics\"\n\t\t\t\t\t\t\titems={songs.map((song) => song.title).sort()}\n\t\t\t\t\t\t\thandleBack={() => handleClick('nav', '')}\n\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tplaylist: (\n\t\t\t\t\t\t<SongList\n\t\t\t\t\t\t\tlistType=\"playlist\"\n\t\t\t\t\t\t\tname={viewItem}\n\t\t\t\t\t\t\tsongs={songs}\n\t\t\t\t\t\t\thandleBack={() => handleClick('playlists', '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tartist: (\n\t\t\t\t\t\t<SongList\n\t\t\t\t\t\t\tlistType=\"artist\"\n\t\t\t\t\t\t\tname={viewItem}\n\t\t\t\t\t\t\tsongs={songs}\n\t\t\t\t\t\t\thandleBack={() => handleClick('artists', '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tlyrics: (\n\t\t\t\t\t\t<div className=\"one-song\">\n\t\t\t\t\t\t\t<h2 className=\"subtitle\" onClick={() => handleClick('songs', '')}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-caret-left\">&nbsp;</i>\n\t\t\t\t\t\t\t\t{viewItem}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<Lyrics songs={songs} name={viewItem} renderTitle={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t}[view]\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst Navigation = (props) => {\n\treturn (\n\t\t<div className=\"nav-menu\">\n\t\t\t<div\n\t\t\t\tclassName=\"nav-item\"\n\t\t\t\tonClick={() => props.handleClick('playlists', '')}\n\t\t\t>\n\t\t\t\tPlaylists\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"nav-item\"\n\t\t\t\tonClick={() => props.handleClick('artists', '')}\n\t\t\t>\n\t\t\t\tArtists\n\t\t\t</div>\n\t\t\t<div className=\"nav-item\" onClick={() => props.handleClick('songs', '')}>\n\t\t\t\tSongs\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst RenderList = (props) => {\n\tvar data = ''\n\tif (!props.items || !props.items.length) {\n\t\tdata = <div className=\"empty-list\">No {props.listType} defined</div>\n\t} else {\n\t\tconst entries = props.items.map((name) => (\n\t\t\t<li\n\t\t\t\tclassName=\"sublist-item\"\n\t\t\t\tkey={name}\n\t\t\t\tname={name}\n\t\t\t\tonClick={() => props.handleClick(props.sublistType, name)}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</li>\n\t\t))\n\t\tdata = <ul className=\"song-title-list\">{entries}</ul>\n\t}\n\treturn (\n\t\t<div className=\"renderlist-container\">\n\t\t\t<h2 className=\"subtitle\" onClick={props.handleBack}>\n\t\t\t\t<i className=\"fas fa-caret-left\">&nbsp;</i>\n\t\t\t\t{props.listType}\n\t\t\t</h2>\n\t\t\t{data}\n\t\t</div>\n\t)\n}\n\nconst SongList = (props) => {\n\tvar data = ''\n\tif (!props.songs || !props.songs.length) {\n\t\tdata = (\n\t\t\t<div className=\"empty-list\">No songs for &quot;{props.name}&quot;</div>\n\t\t)\n\t} else {\n\t\tconst entries = props.songs\n\t\t\t.filter((song) => song[props.listType] === props.name)\n\t\t\t.map((song) => (\n\t\t\t\t<Lyrics\n\t\t\t\t\tkey={song.title}\n\t\t\t\t\tname={song.title}\n\t\t\t\t\tsongs={songs}\n\t\t\t\t\trenderTitle={true}\n\t\t\t\t/>\n\t\t\t))\n\t\tdata = <div className=\"song-list\">{entries}</div>\n\t}\n\treturn (\n\t\t<div className=\"songlist-container\">\n\t\t\t<h2 className=\"subtitle\" onClick={props.handleBack}>\n\t\t\t\t<i className=\"fas fa-caret-left\">&nbsp;</i>\n\t\t\t\t{props.name}\n\t\t\t</h2>\n\t\t\t{data}\n\t\t</div>\n\t)\n}\n\nconst Lyrics = (props) => {\n\tconst song = props.songs.find((x) => x.title === props.name)\n\tconst title = props.renderTitle ? (\n\t\t<h3 className=\"song-title\">{song.title}</h3>\n\t) : (\n\t\t''\n\t)\n\tconst lines = song.lyrics.map((line, index) => (\n\t\t<div className=\"songLine\" key={index}>\n\t\t\t{line}\n\t\t</div>\n\t))\n\treturn (\n\t\t<div className=\"sublist-item\">\n\t\t\t{title}\n\t\t\t{lines}\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: {'Service-Worker': 'script'},\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}